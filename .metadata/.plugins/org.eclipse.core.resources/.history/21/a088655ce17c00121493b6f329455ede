package main;

import java.util.ArrayList;
/**
 * A geometric container that also handles collision detection
 */
public class Rectangle 
{
	private double x, y;
	private ArrayList<Vector2d> points; // clockwise elements
	private double width, height;
	private double angle;
	
	public Rectangle()
	{
		this.x = 0;
		this.y = 0;
		this.width = 0;
		this.height = 0;
		angle = 0;
		points = new ArrayList<Vector2d>();
	}
	
	public Rectangle(double width, double height)
	{
		this.x = 0;
		this.y = 0;
		this.width = width;
		this.height = height;
		angle = 0;
		points = new ArrayList<Vector2d>();
	}
	
	public Rectangle(double x, double y, double width, double height)
	{
		this.x = x;
		this.y = y;
		this.width = width;
		this.height = height;
		angle = 0;
		points = new ArrayList<Vector2d>();
	}
	
	private void createPoints()
	{
		points.clear();
		double theta = Math.atan2(height/2, width/2) - Math.toRadians(angle);
		double radius = Math.hypot(width/2, height/2);
		Vector2d v1 = new Vector2d((radius * Math.cos(theta) - (x - width/2)), 
					               (radius * Math.sin(theta) - (y - height/2)));
		Vector2d v2 = new Vector2d((radius * Math.cos(theta) - (x + width/2)), 
	                               (radius * Math.sin(theta) - (y - height/2)));
		Vector2d v3 = new Vector2d((radius * Math.cos(theta) - (x + width/2)), 
                                   (radius * Math.sin(theta) - (y + height/2)));
		Vector2d v4 = new Vector2d((radius * Math.cos(theta) - (x - width/2)), 
                                   (radius * Math.sin(theta) - (y + height/2)));
		points.add(v1);
		points.add(v2);
		points.add(v3);
		points.add(v4);
	}
	
	public ArrayList<Line> getLines()
	{
		ArrayList<Line> lines = new ArrayList<Line>();
		for(int i = 0; i < points.size(); i++)
		{
			if(i == points.size() - 1)
				lines.add(new Line(points.get(i), points.get(0)));
			else
				lines.add(new Line(points.get(i), points.get(i+1)));
		}
		return lines;
	}
}
